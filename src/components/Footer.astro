---
import siteConfig from '../data/site-config';

const socialLinks = siteConfig.socialLinks || [];
const navLinks = siteConfig.footerNavLinks || [];
---

<footer class="w-full max-w-3xl mx-auto pt-12 pb-10 sm:pt-24 sm:pb-14">
    <div class="mb-4 flex flex-wrap gap-x-6 gap-y-1">
        {navLinks.map((link) => (
            <a class="font-serif hover:underline hover:underline-offset-2" href={link.href}>
                {link.text}
            </a>
        ))}
    </div>
    <div
        class:list={[
            'pt-6 flex flex-col gap-4 border-t border-dashed border-main',
            { 'sm:flex-row-reverse sm:justify-between sm:items-center': socialLinks.length > 0 }
        ]}
    >
        {
            socialLinks.length > 0 && (
                <div class="flex flex-wrap gap-x-4 gap-y-1">
                    {socialLinks.map((link) => (
                        <a
                            class="inline-flex items-center justify-center text-sm hover:underline hover:underline-offset-2"
                            href={link.href}
                            target="_blank"
                            rel="noopener noreferer"
                        >
                            {link.icon ?
                                <img src={`/svg/${link.icon}.svg`} alt={link.text}
                                     class="w-10 h-10 sm:w-8 sm:h-8"
                                /> :
                                link.text
                            }
                        </a>
                    ))}
                </div>
            )
        }
        <p class="text-sm">
            &copy; {new Date().getFullYear()}&nbsp;<a class="hover:underline hover:underline-offset-2"
                                                      href="/">{siteConfig.title}</a>. All rights reserved.
        </p>
    </div>
</footer>

<script>
    const updateNavLinks = () => {
        const getLocaleFromPath = () => {
            const path = window.location.pathname.split('/')[1];
            return path ? `/${path}` : '/en';
        };

        const locale = getLocaleFromPath();
        const navLinks = document.querySelectorAll('.mb-4 a');
        navLinks.forEach(link => {
            let href = link.getAttribute('href');
            href = href.replace(/^\/[a-z]{2}(\/|$)/, '/'); // Remove any existing locale
            link.href = `${locale}${href}`;
        });
    };

    document.addEventListener('astro:page-load', updateNavLinks);
    document.addEventListener('astro:after-swap', updateNavLinks);

    // Ensure the function is called immediately to handle the initial load
    updateNavLinks();

    // Use MutationObserver to detect changes in the DOM and update the links
    const observer = new MutationObserver(updateNavLinks);
    observer.observe(document.body, { childList: true, subtree: true });
</script>